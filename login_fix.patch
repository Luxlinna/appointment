# --- a/pages/login.tsx
# +++ b/pages/login.tsx
# @@ -1,20 +1,18 @@
# -import { useState } from "react";
# -import { useAuth } from "'context/AuthContext'";
# +import { useState } from "react";
# +import { useAuth } from "../context/AuthContext";
#  import toast from "react-hot-toast";
# -import { useRouter } from "next/router";
# -
# -export default function LoginPage() {
# -  const [email, setEmail] = useState("");
# -  const [password, setPassword] = useState("");
# -  const { login } = useAuth();
# -  const router = useRouter();
# -
# -  const handleSubmit = async (e: React.FormEvent) => {
# -    e.preventDefault();
# -
# -    if (!email.trim() || !password.trim()) {
# -      toast.error("Please enter both email and password");
# -      return;
# -    }
# -
# -    try {
# -      await login(email.trim(), password.trim());
# -      toast.success("Logged in!");
# -      // Role-based redirect handled in AuthContext
# -      const userRole = localStorage.getItem("role"); // Get role from localStorage
# -      if (userRole === "ADMIN") {
# -        router.push("/admin/dashboard");
# -      } else if (userRole === "DOCTOR") {
# -        router.push("/doctor/dashboard");
# -      } else if (userRole === "USER") {
# -        router.push("/dashboard");
# -      } else {
# -        toast.error("Unknown user role");
# -        router.push("/login");
# -      }
# -    } catch (err) {
# -      toast.error("Login failed");
# -      console.error("Login failed:", err);
# -    }
# -  };
# -
# -  return (
# -    <div className="min-h-screen flex justify-center items-center bg-gray-100">
# -      <form
# -        onSubmit={handleSubmit}
# -        className="bg-white p-6 rounded shadow-md w-full max-w-md"
# -      >
# -        <h2 className="text-2xl font-bold mb-4 text-center">Login</h2>
# -
# -        <input
# -          type="email"
# -          placeholder="Email"
# -          value={email}
# -          onChange={(e) => setEmail(e.target.value)}
# -          className="w-full mb-4 p-2 border rounded"
# -          required
# -        />
# -        <input
# -          type="password"
# -          placeholder="Password"
# -          value={password}
# -          onChange={(e) => setPassword(e.target.value)}
# -          className="w-full mb-4 p-2 border rounded"
# -          required
# -        />
# -        <button
# -          type="submit"
# -          className="w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700"
# -        >
# -          Login
# -        </button>
# -        <p className="text-center text-sm mt-4">
# -          <a href="/reset-password" className="text-blue-600 hover:underline">
# -            Forgot password?
# -          </a>
# -        </p>
# -      </form>
# -    </div>
# -  );
# -}
# +export default function LoginPage() {
# +  const [email, setEmail] = useState("");
# +  const [password, setPassword] = useState("");
# +  const { login } = useAuth();
# +
# +  const handleSubmit = async (e: React.FormEvent) => {
# +    e.preventDefault();
# +
# +    if (!email.trim() || !password.trim()) {
# +      toast.error("Please enter both email and password");
# +      return;
# +    }
# +
# +    try {
# +      await login(email.trim(), password.trim());
# +      toast.success("Logged in!");
# +      // Role-based redirect handled in AuthContext, no manual redirect here
# +    } catch (err) {
# +      toast.error("Login failed");
# +      console.error("Login failed:", err);
# +    }
# +  };
# +
# +  return (
# +    <div className="min-h-screen flex justify-center items-center bg-gray-100">
# +      <form
# +        onSubmit={handleSubmit}
# +        className="bg-white p-6 rounded shadow-md w-full max-w-md"
# +      >
# +        <h2 className="text-2xl font-bold mb-4 text-center">Login</h2>
# +
# +        <input
# +          type="email"
# +          placeholder="Email"
# +          value={email}
# +          onChange={(e) => setEmail(e.target.value)}
# +          className="w-full mb-4 p-2 border rounded"
# +          required
# +        />
# +        <input
# +          type="password"
# +          placeholder="Password"
# +          value={password}
# +          onChange={(e) => setPassword(e.target.value)}
# +          className="w-full mb-4 p-2 border rounded"
# +          required
# +        />
# +        <button
# +          type="submit"
# +          className="w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700"
# +        >
# +          Login
# +        </button>
# +        <p className="text-center text-sm mt-4">
# +          <a href="/reset-password" className="text-blue-600 hover:underline">
# +            Forgot password?
# +          </a>
# +        </p>
# +      </form>
# +    </div>
# +  );
# +}
